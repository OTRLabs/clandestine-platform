// eslint-disable-next-line prefer-arrow-functions/prefer-arrow-functions
export function flatMorph(o, flatMapEntry) {
    const inputIsArray = Array.isArray(o);
    const entries = Object.entries(o).flatMap((entry, i) => {
        const result = inputIsArray ? flatMapEntry(i, entry[1]) : flatMapEntry(...entry, i);
        const entrySet = Array.isArray(result[0]) || result.length === 0 ?
            // if we have an empty array (for filtering) or an array with
            // another array as its first element, treat it as a list of
            result
            // otherwise, it should be a single entry, so nest it in a tuple
            // so it doesn't get spread when the result is flattened
            : [result];
        return entrySet;
    });
    const objectResult = Object.fromEntries(entries);
    return typeof entries[0]?.[0] === "number" ?
        Object.values(objectResult)
        : objectResult;
}
