import { throwParseError } from "@ark/util";
const unitLiteralKeywords = {
    null: null,
    undefined,
    true: true,
    false: false
};
export const parseDefault = (s) => {
    if (!s.defaultable)
        return throwParseError(shallowDefaultMessage);
    // store the node that will be bounded
    const baseNode = s.unsetRoot();
    s.parseOperand();
    const defaultNode = s.unsetRoot();
    // after parsing the next operand, use the locations to get the
    // token from which it was parsed
    if (!defaultNode.hasKind("unit"))
        return s.error(writeNonLiteralDefaultMessage(defaultNode.expression));
    // assignability is checked in parseEntries
    return [baseNode, "=", defaultNode.unit];
};
export const writeNonLiteralDefaultMessage = (defaultDef) => `Default value '${defaultDef}' must a literal value`;
export const shallowDefaultMessage = `Default values must be specified on objects like { isAdmin: 'boolean = false' }`;
