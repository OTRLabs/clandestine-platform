import { compileErrorContext } from "../shared/implement.js";
import { BaseRoot } from "./root.js";
export class RawBasis extends BaseRoot {
    rawKeyOf() {
        return this.$.units(this.literalKeys);
    }
    traverseApply = (data, ctx) => {
        if (!this.traverseAllows(data, ctx))
            ctx.error(this.errorContext);
    };
    get errorContext() {
        return { code: this.kind, description: this.description, ...this.inner };
    }
    get compiledErrorContext() {
        return compileErrorContext(this.errorContext);
    }
    compile(js) {
        if (js.traversalKind === "Allows")
            js.return(this.compiledCondition);
        else {
            js.if(this.compiledNegation, () => js.line(`${js.ctx}.error(${this.compiledErrorContext})`));
        }
    }
}
