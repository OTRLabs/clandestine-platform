import type { BaseRoot, DateLiteral } from "@ark/schema";
import { type BigintLiteral, type ErrorMessage, type NumberLiteral, type trim } from "@ark/util";
import type { DynamicStateWithRoot } from "../../reduce/dynamic.js";
import type { StringLiteral } from "../operand/enclosed.js";
declare const unitLiteralKeywords: {
    readonly null: null;
    readonly undefined: undefined;
    readonly true: true;
    readonly false: false;
};
type UnitLiteralKeyword = keyof typeof unitLiteralKeywords;
export type UnitLiteral = StringLiteral | BigintLiteral | NumberLiteral | DateLiteral | UnitLiteralKeyword;
export type ParsedDefault = [BaseRoot, "=", unknown];
export declare const parseDefault: (s: DynamicStateWithRoot) => ParsedDefault;
export type parseDefault<root, unscanned extends string> = trim<unscanned> extends infer defaultValue extends UnitLiteral ? [
    root,
    "=",
    defaultValue
] : ErrorMessage<writeNonLiteralDefaultMessage<trim<unscanned>>>;
export declare const writeNonLiteralDefaultMessage: <defaultDef extends string>(defaultDef: defaultDef) => writeNonLiteralDefaultMessage<defaultDef>;
export type writeNonLiteralDefaultMessage<defaultDef extends string> = `Default value '${defaultDef}' must a literal value`;
export declare const shallowDefaultMessage = "Default values must be specified on objects like { isAdmin: 'boolean = false' }";
export type shallowDefaultMessage = typeof shallowDefaultMessage;
export {};
