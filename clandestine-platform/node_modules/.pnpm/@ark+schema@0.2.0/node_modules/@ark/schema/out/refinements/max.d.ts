import type { BaseRoot } from "../roots/root.js";
import type { declareNode } from "../shared/declare.js";
import { type nodeImplementationOf } from "../shared/implement.js";
import type { TraverseAllows } from "../shared/traversal.js";
import { BaseRange, type BaseRangeInner, type UnknownNormalizedRangeSchema } from "./range.js";
export interface MaxInner extends BaseRangeInner {
    rule: number;
}
export interface NormalizedMaxSchema extends UnknownNormalizedRangeSchema {
    rule: number;
}
export type MaxSchema = NormalizedMaxSchema | number;
export interface MaxDeclaration extends declareNode<{
    kind: "max";
    schema: MaxSchema;
    normalizedSchema: NormalizedMaxSchema;
    inner: MaxInner;
    prerequisite: number;
    errorContext: MaxInner;
}> {
}
export declare const maxImplementation: nodeImplementationOf<MaxDeclaration>;
export declare class MaxNode extends BaseRange<MaxDeclaration> {
    impliedBasis: BaseRoot;
    traverseAllows: TraverseAllows<number>;
}
