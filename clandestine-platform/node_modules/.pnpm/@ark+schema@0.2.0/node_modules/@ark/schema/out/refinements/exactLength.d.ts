import { RawPrimitiveConstraint } from "../constraint.js";
import type { BaseRoot } from "../roots/root.js";
import type { BaseMeta, declareNode } from "../shared/declare.js";
import { type nodeImplementationOf } from "../shared/implement.js";
import type { TraverseAllows } from "../shared/traversal.js";
import type { LengthBoundableData } from "./range.js";
export interface ExactLengthInner extends BaseMeta {
    readonly rule: number;
}
export type NormalizedExactLengthSchema = ExactLengthInner;
export type ExactLengthSchema = NormalizedExactLengthSchema | number;
export type ExactLengthDeclaration = declareNode<{
    kind: "exactLength";
    schema: ExactLengthSchema;
    normalizedSchema: NormalizedExactLengthSchema;
    inner: ExactLengthInner;
    prerequisite: LengthBoundableData;
    errorContext: ExactLengthInner;
}>;
export declare const exactLengthImplementation: nodeImplementationOf<ExactLengthDeclaration>;
export declare class ExactLengthNode extends RawPrimitiveConstraint<ExactLengthDeclaration> {
    traverseAllows: TraverseAllows<LengthBoundableData>;
    readonly compiledCondition: string;
    readonly compiledNegation: string;
    readonly impliedBasis: BaseRoot;
    readonly expression: string;
}
