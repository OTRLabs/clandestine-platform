import type { PartialRecord } from "./records.js";
declare global {
    export const $ark: ArkEnv.registry;
    export interface ArkEnv {
        registry(): {};
    }
    export namespace ArkEnv {
        type registry = PartialRecord<string, object | symbol> & ReturnType<ArkEnv["registry"]>;
    }
}
export declare const registry: Record<string, unknown>;
export declare const register: (value: object | symbol) => string;
export declare const reference: (name: string) => RegisteredReference;
export declare const registeredReference: (value: object | symbol) => RegisteredReference;
export type RegisteredReference<to extends string = string> = `$ark.${to}`;
export declare const isDotAccessible: (keyName: string) => boolean;
export declare const compileSerializedValue: (value: unknown) => string;
