export const capitalize = (s) => (s[0].toUpperCase() + s.slice(1));
export const anchoredRegex = (regex) => new RegExp(anchoredSource(regex), typeof regex === "string" ? "" : regex.flags);
export const deanchoredRegex = (regex) => new RegExp(deanchoredSource(regex), typeof regex === "string" ? "" : regex.flags);
export const anchoredSource = (regex) => {
    const source = typeof regex === "string" ? regex : regex.source;
    return `^(?:${source})$`;
};
export const deanchoredSource = (regex) => {
    const source = typeof regex === "string" ? regex : regex.source;
    if (source.startsWith("^(?:") && source.endsWith(")$"))
        return source.slice(4, -2);
    return source.slice(source[0] === "^" ? 1 : 0, source.at(-1) === "$" ? -1 : undefined);
};
export const escapeToken = "\\";
export const whiteSpaceTokens = {
    " ": true,
    "\n": true,
    "\t": true
};
